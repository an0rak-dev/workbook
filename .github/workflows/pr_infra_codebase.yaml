name: PullRequest in infrastructure/codebase

on:
  pull_request:
    paths: 
      - "infrastructure/codebase/**"
      - ".github/workflows/pr_infra_codebase.yaml"

env:
  TF_VERSION: 1.0.9

defaults:
  run:
    working-directory: infrastructure/codebase/github

jobs:
  validate:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Initialize Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZ_TOKEN }}
      - name: Initialize Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ env.TF_VERSION }}
      - name: Check TF format
        run: terraform fmt -check 
      - name: Validate TF
        run: |
          export AZ_STORAGE_NAME="${{ secrets.AZ_STORAGE }}"
          export AZ_RESOURCE_GROUP="${{ secrets.AZ_RGROUP }}"
          terraform init \
            -backend-config storage_account_name="$AZ_STORAGE_NAME" \
            -backend-config resource_group_name="$AZ_RESOURCE_GROUP"
          terraform validate -no-color

  plan:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: 'write'
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Initialize Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZ_TOKEN }}
      - name: Initialize Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ env.TF_VERSION }}
      - name: Plan TF
        id: plan
        run: |
          export AZ_STORAGE_NAME="${{ secrets.AZ_STORAGE }}"
          export AZ_RESOURCE_GROUP="${{ secrets.AZ_RGROUP }}"
          terraform init \
            -backend-config storage_account_name="$AZ_STORAGE_NAME" \
            -backend-config resource_group_name="$AZ_RESOURCE_GROUP"
          terraform plan -no-color
      - name: Comment PR with plan
        uses: actions/github-script@v6
        with:
          script: |
            let message = ${{ steps.plan.output.stdout }};
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo
              body: `
                ### Plan Output
                \`\`\`
                { message }
                \`\`\`
              `
            })